apiVersion: v1
kind: Service
metadata:
  name: ${CLUSTER_NAME}-ref-loader
  namespace: ${CLUSTER_NAMESPACE:=default}
  annotations:
    # This service is just a placeholder to load ConfigMap values
    config.kubernetes.io/local-config: "true"
spec:
  # Dummy service that will never be created
  type: ExternalName
  externalName: "null"
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${CLUSTER_NAMESPACE:=default}
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
    account.aws/alias: ${ACCOUNT_ALIAS}
    account.aws/namespace: ${ACCOUNT_NAMESPACE}
    environment: ${ENVIRONMENT}
  annotations:
    # Reference ConfigMaps for values
    cluster.x-k8s.io/account-config: "${ACCOUNT_NAMESPACE}/account-info"
    cluster.x-k8s.io/network-config: "${ACCOUNT_NAMESPACE}/${NETWORKING_NAME:=main}-networking"
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta2
    kind: AWSManagedControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta2
    kind: AWSManagedControlPlane
    name: ${CLUSTER_NAME}-control-plane
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta2
kind: AWSManagedControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: ${CLUSTER_NAMESPACE:=default}
spec:
  region: ${REGION}
  version: ${EKS_VERSION:=v1.28}
  eksClusterName: ${CLUSTER_NAME}
  roleName: eks-controlplane.cluster-api-provider-aws.sigs.k8s.io
  identityRef:
    kind: AWSClusterRoleIdentity
    name: ${ACCOUNT_ALIAS}-identity
  network:
    vpc:
      id: ${VPC_ID}
    subnets:
      - id: ${PRIVATE_SUBNET_A_ID}
      - id: ${PRIVATE_SUBNET_B_ID}
      - id: ${PRIVATE_SUBNET_C_ID}
  associateOIDCProvider: true
  addons:
  - name: vpc-cni
    version: ${VPC_CNI_VERSION:=v1.16.0-eksbuild.1}
  - name: coredns
    version: ${COREDNS_VERSION:=v1.10.1-eksbuild.6}
  - name: kube-proxy
    version: ${KUBE_PROXY_VERSION:=v1.28.5-eksbuild.2}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachinePool
metadata:
  name: ${CLUSTER_NAME}-pool-0
  namespace: ${CLUSTER_NAMESPACE:=default}
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${NODE_DESIRED_SIZE:=2}
  template:
    spec:
      clusterName: ${CLUSTER_NAME}
      bootstrap:
        dataSecretName: ""
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSManagedMachinePool
        name: ${CLUSTER_NAME}-pool-0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSManagedMachinePool
metadata:
  name: ${CLUSTER_NAME}-pool-0
  namespace: ${CLUSTER_NAMESPACE:=default}
spec:
  roleAdditionalPolicies:
    - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  roleName: eks-nodegroup.cluster-api-provider-aws.sigs.k8s.io
  scaling:
    minSize: ${NODE_MIN_SIZE:=1}
    maxSize: ${NODE_MAX_SIZE:=3}
  instanceType: ${NODE_INSTANCE_TYPE:=t3.medium}
  eksNodegroupName: ${CLUSTER_NAME}-ng-0
  subnetIDs:
    - ${PRIVATE_SUBNET_A_ID}
    - ${PRIVATE_SUBNET_B_ID}
    - ${PRIVATE_SUBNET_C_ID}