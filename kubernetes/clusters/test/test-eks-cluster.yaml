---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: test-eks-cluster
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
    serviceDomain: "cluster.local"
    services:
      cidrBlocks: ["10.96.0.0/12"]
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta2
    kind: AWSManagedControlPlane
    name: test-eks-cluster-control-plane
  infrastructureRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta2
    kind: AWSManagedControlPlane
    name: test-eks-cluster-control-plane
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta2
kind: AWSManagedControlPlane
metadata:
  name: test-eks-cluster-control-plane
  namespace: default
spec:
  region: us-west-2
  sshKeyName: ""  # No SSH key needed
  version: "v1.28"
  # Use the existing VPC and subnets
  network:
    vpc:
      id: vpc-024c10ffcc74e11e5
    subnets:
      - id: subnet-06f3a5f9b3ca897d9
      - id: subnet-0575af9ebab56fce9
      - id: subnet-077b88cdae46ff725
      - id: subnet-0c88881a4a9a70d98
      - id: subnet-055ee5c382c893b34
      - id: subnet-05bd791426d873f63
  # IAM role for cross-account access
  identityRef:
    kind: AWSClusterRoleIdentity
    name: test-account-identity
  # Enable EKS add-ons
  addons:
    - name: vpc-cni
      version: "v1.16.0-eksbuild.1"
    - name: kube-proxy
      version: "v1.28.5-eksbuild.2"
    - name: coredns
      version: "v1.10.1-eksbuild.6"
  # IAM for OIDC provider (for IRSA)
  associateOIDCProvider: true
  # Disable managed service role (we'll create our own)
  disableVPCCNI: false
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachinePool
metadata:
  name: test-eks-cluster-pool-0
  namespace: default
spec:
  clusterName: test-eks-cluster
  replicas: 2
  template:
    spec:
      clusterName: test-eks-cluster
      bootstrap:
        dataSecretName: ""  # EKS manages the bootstrap
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSManagedMachinePool
        name: test-eks-cluster-pool-0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSManagedMachinePool
metadata:
  name: test-eks-cluster-pool-0
  namespace: default
spec:
  # Node group configuration
  instanceType: t3.medium
  scaling:
    minSize: 1
    maxSize: 4
  # Use only private subnets for worker nodes
  subnetIDs:
    - subnet-0c88881a4a9a70d98
    - subnet-055ee5c382c893b34
    - subnet-05bd791426d873f63
  # Remote access (no SSH key)
  remoteAccess:
    public: false
  # Update configuration
  updateConfig:
    maxUnavailable: 1
  # Capacity type - on-demand for test, could be SPOT for cost savings
  capacityType: onDemand
  # Labels for the nodes
  labels:
    cluster: test-eks-cluster
    nodegroup: pool-0
  # Taints if needed
  taints: []
  # AMI type - AL2_x86_64 is Amazon Linux 2
  amiType: AL2_x86_64
  # Disk size
  diskSize: 100