apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xcapaiamroles.aws.platform.io
spec:
  compositeTypeRef:
    apiVersion: aws.platform.io/v1alpha1
    kind: XCAPAIAMRoles
  resources:
    # EKS Control Plane Role
    - name: eks-control-plane-role
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicyDocument: |
              {
                "Version": "2012-10-17",
                "Statement": [{
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "eks.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }]
              }
            roleName: eks-controlplane.cluster-api-provider-aws.sigs.k8s.io
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.tags
          toFieldPath: spec.forProvider.tags
          
    # EKS Control Plane Policy Attachments
    - name: eks-cluster-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: eks-control-plane
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    - name: eks-vpc-resource-controller-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSVPCResourceController
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: eks-control-plane
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    # EKS Node Group Role
    - name: eks-node-group-role
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicyDocument: |
              {
                "Version": "2012-10-17",
                "Statement": [{
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "ec2.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }]
              }
            roleName: eks-nodegroup.cluster-api-provider-aws.sigs.k8s.io
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.tags
          toFieldPath: spec.forProvider.tags
          
    # EKS Node Group Policy Attachments
    - name: eks-worker-node-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: eks-node-group
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    - name: eks-cni-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: eks-node-group
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    - name: eks-container-registry-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: eks-node-group
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    - name: eks-ssm-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: eks-node-group
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    # EC2 Control Plane Role
    - name: control-plane-role
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicyDocument: |
              {
                "Version": "2012-10-17",
                "Statement": [{
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "ec2.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }]
              }
            roleName: control-plane.cluster-api-provider-aws.sigs.k8s.io
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.tags
          toFieldPath: spec.forProvider.tags
          
    # EC2 Control Plane Instance Profile
    - name: control-plane-instance-profile
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: InstanceProfile
        spec:
          forProvider:
            instanceProfileName: control-plane.cluster-api-provider-aws.sigs.k8s.io
            roleSelector:
              matchControllerRef: true
              matchLabels:
                role: control-plane
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    # EC2 Nodes Role
    - name: nodes-role
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicyDocument: |
              {
                "Version": "2012-10-17",
                "Statement": [{
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "ec2.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }]
              }
            roleName: nodes.cluster-api-provider-aws.sigs.k8s.io
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.tags
          toFieldPath: spec.forProvider.tags
          
    # EC2 Nodes Instance Profile
    - name: nodes-instance-profile
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: InstanceProfile
        spec:
          forProvider:
            instanceProfileName: nodes.cluster-api-provider-aws.sigs.k8s.io
            roleSelector:
              matchControllerRef: true
              matchLabels:
                role: nodes
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    # Control Plane IAM Policy
    - name: control-plane-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Policy
        spec:
          forProvider:
            name: control-plane.cluster-api-provider-aws.sigs.k8s.io
            document: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "autoscaling:DescribeAutoScalingGroups",
                      "autoscaling:DescribeLaunchConfigurations",
                      "autoscaling:DescribeTags",
                      "ec2:DescribeInstances",
                      "ec2:DescribeImages",
                      "ec2:DescribeRegions",
                      "ec2:DescribeRouteTables",
                      "ec2:DescribeSecurityGroups",
                      "ec2:DescribeSubnets",
                      "ec2:DescribeVolumes",
                      "ec2:CreateSecurityGroup",
                      "ec2:CreateTags",
                      "ec2:CreateVolume",
                      "ec2:ModifyInstanceAttribute",
                      "ec2:ModifyVolume",
                      "ec2:AttachVolume",
                      "ec2:AuthorizeSecurityGroupIngress",
                      "ec2:CreateRoute",
                      "ec2:DeleteRoute",
                      "ec2:DeleteSecurityGroup",
                      "ec2:DeleteVolume",
                      "ec2:DetachVolume",
                      "ec2:RevokeSecurityGroupIngress",
                      "ec2:DescribeVpcs",
                      "ec2:DescribeClassicLinkInstances",
                      "elasticloadbalancing:AddTags",
                      "elasticloadbalancing:CreateLoadBalancer",
                      "elasticloadbalancing:ConfigureHealthCheck",
                      "elasticloadbalancing:DeleteLoadBalancer",
                      "elasticloadbalancing:DescribeLoadBalancers",
                      "elasticloadbalancing:DescribeLoadBalancerAttributes",
                      "elasticloadbalancing:ModifyLoadBalancerAttributes",
                      "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                      "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                      "elasticloadbalancing:CreateListener",
                      "elasticloadbalancing:DescribeListeners",
                      "elasticloadbalancing:DeleteListener",
                      "elasticloadbalancing:CreateTargetGroup",
                      "elasticloadbalancing:DescribeTargetGroups",
                      "elasticloadbalancing:DeleteTargetGroup",
                      "elasticloadbalancing:RegisterTargets",
                      "elasticloadbalancing:DescribeTargetHealth",
                      "elasticloadbalancing:DeregisterTargets",
                      "iam:CreateServiceLinkedRole",
                      "kms:DescribeKey"
                    ],
                    "Resource": "*"
                  }
                ]
              }
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    # Attach Control Plane Policy
    - name: control-plane-policy-attachment
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArnSelector:
              matchControllerRef: true
              matchLabels:
                policy: control-plane
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: control-plane
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    # Node SSM Policy Attachment
    - name: nodes-ssm-policy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: nodes
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
          
    # Add labels to resources for selection
    - name: label-eks-control-plane-role
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.uid
            strategy: string
            string:
              fmt: "%s-eks-control-plane-role"
          toFieldPath: metadata.name
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
          transforms:
            - type: map
              map:
                role: eks-control-plane